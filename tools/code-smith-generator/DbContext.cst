<%@ CodeTemplate Language="C#" ResponseEncoding="UTF-8" TargetLanguage="C#" Debug="TRUE" Inherits="OutputFileCodeTemplate"%>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>

<%@ Assembly src="Helper.cs" %>
<%@ Import Namespace="Common" %>

<%@ Property Name="Tables" Type="SchemaExplorer.TableSchemaCollection" Category="Context" Description="Tables" Inherits="OutputFileCodeTemplate" %>

<%@ Property Name="DbContextNamespace" Type="String" Category="DbContext" Description="DbContext Namespace" %>
<%@ Property Name="DbContextName" Type="String" Category="DbContext" Description="DbContext Name" %>

<%@ Property Name="ModelNamespace" Type="String" Category="Model" Description="Model Namespace" %>

using Insql;
using <%=ModelNamespace%>;
using System;
using System.Collections.Generic;
using System.Linq;

namespace <%=DbContextNamespace%>
{
    public class <%=DbContextName %> : DbContext
    {
        public <%=DbContextName %>(DbContextOptions<<%=DbContextName %>> options) : base(options)
        {
        }
        <% foreach (TableSchema tableSchema in this.Tables) { %>
        
        #region <%=Helper.GetModelClassName(tableSchema)%>

        public void Insert<%=Helper.GetModelClassClearName(tableSchema)%>(<%=Helper.GetModelClassName(tableSchema)%> info)
        {
            this.Execute(nameof(Insert<%=Helper.GetModelClassClearName(tableSchema)%>),info);
        }
        
        <% if(tableSchema.Columns.Any(columnSchema=> columnSchema.IsPrimaryKeyMember)) {%>
        <% if(tableSchema.Columns.Any(columnSchema=> !columnSchema.IsPrimaryKeyMember)) {%>
        public void Update<%=Helper.GetModelClassClearName(tableSchema)%>(<%=Helper.GetModelClassName(tableSchema)%> info)
        {
            this.Execute(nameof(Update<%=Helper.GetModelClassClearName(tableSchema)%>),info);
        }
        
        <%} %>
        public void Delete<%=Helper.GetModelClassClearName(tableSchema)%>(<%= string.Join(",",tableSchema.Columns.Where(columnSchema=> columnSchema.IsPrimaryKeyMember)
    .Select(columnSchema=> $"{Helper.GetModelPropertyType(columnSchema)} {Helper.GetModelPropertyName(columnSchema)}")) %>)
        {
            this.Execute(nameof(Delete<%=Helper.GetModelClassClearName(tableSchema)%>),new { <%= string.Join(",",tableSchema.Columns.Where(columnSchema=> columnSchema.IsPrimaryKeyMember)
    .Select(columnSchema=>$"{Helper.GetModelPropertyName(columnSchema)}")) %> });
        }
        
        public <%=Helper.GetModelClassName(tableSchema)%> Select<%=Helper.GetModelClassClearName(tableSchema)%>(<%= string.Join(",",tableSchema.Columns.Where(columnSchema=> columnSchema.IsPrimaryKeyMember)
    .Select(columnSchema=>$"{Helper.GetModelPropertyType(columnSchema)} {Helper.GetModelPropertyName(columnSchema)}")) %>)
        {
            return this.Query<<%=Helper.GetModelClassName(tableSchema)%>>(nameof(Select<%=Helper.GetModelClassClearName(tableSchema)%>),new { <%= string.Join(",",tableSchema.Columns.Where(columnSchema=> columnSchema.IsPrimaryKeyMember)
                .Select(columnSchema=>$"{Helper.GetModelPropertyName(columnSchema)}")) %> }).SingleOrDefault();
        }
        <%} %>
        
        #endregion
        <%} %>
    }
}